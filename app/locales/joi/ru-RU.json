{
  "root": "стоимость",
  "key": "\"{{!label}}\" ",
  "messages": {
    "wrapArrays": true
  },
  "any": {
    "unknown": "не разрешен",
    "invalid": "не недопустимое значение",
    "empty": "не должен быть пустым",
    "required": "является обязательным",
    "allowOnly": "должен быть одним из {{valids}}",
    "default": "вызвал ошибку при выполнении метода default"
  },
  "alternatives": {
    "base": "не соответствует ни одной из допустимых альтернатив"
  },
  "array": {
    "base": "должен быть массивом",
    "includes": "в позиции {{pos}} не соответствует ни одному из допустимых типов",
    "includesSingle": "единственное значение \"{{!label}}\" не соответствует ни одному из допустимых типов",
    "includesOne": "в позиции {{pos}} не проходит проверку, потому что {{reason}}",
    "includesOneSingle": "единственное значение \"{{!label}}\" не проходит проверку, потому что {{reason}}",
    "includesRequiredUnknowns": "не содержит {{unknownMisses}} требуемых значений",
    "includesRequiredKnowns": "не содержит {{knownMisses}}",
    "includesRequiredBoth": "не содержит {{knownMisses}} и {{unknownMisses}} других требуемых значений",
    "excludes": "в позиции {{pos}} содержит исключенное значение",
    "excludesSingle": "единственное значение \"{{!label}}\" содержит исключенное значение",
    "min": "должен содержать не меньше {{limit}} элементов",
    "max": "должен содержать не больше {{limit}} элементов",
    "length": "должен содержать {{limit}} элементов",
    "ordered": "в позиции {{pos}} не проходит проверку, потому что {{reason}}",
    "orderedLength": "в позиции {{pos}} не проходит проверку, потому что массив должен содержать не больше {{limit}} элементов",
    "ref": "ссылки \"{{ref}}\", которая не является положительным числом",
    "sparse": "не должен быть разреженным массивом",
    "unique": "позиция {{pos}} содержит дублирующееся значение"
  },
  "boolean": {
    "base": "должен быть булевым типом"
  },
  "binary": {
    "base": "должен быть буфером или строкой",
    "min": "должен быть не меньше {{limit}} байт",
    "max": "должен быть не больше {{limit}} байт",
    "length": "должен быть равным {{limit}} байт"
  },
  "date": {
    "base": "должен быть числом миллисекунд или валидной датой в строковом формате",
    "format": "должно быть рядом с одной из следующих форматах {{format}}",
    "strict": "должно быть действительной даты",
    "min": "должен быть не меньше \"{{limit}}\"",
    "max": "должен быть не больше \"{{limit}}\"",
    "isoDate": "должен быть валидной датой, соответствующей стандарту ISO 8601",
    "timestamp": {
      "javascript": "должно быть действительным метки или миллисекунд",
      "unix": "должно быть действительным или количество секунд времени"
    },
    "ref": "ссылается на \"{{ref}}\", не являющегося датой"
  },
  "function": {
    "base": "должен быть функцией",
    "arity": "должно быть арность {{n}}",
    "minArity": "должно быть арность больше или равен {{n}}",
    "maxArity": "должно быть меньше или равна арность {{n}}",
    "ref": "должно быть, joi ссылка",
    "class": "должно быть, класс"
  },
  "lazy": {
    "base": "!!схема ошибка: ленив, схема должна быть установлена",
    "schema": "!!схема ошибка: ленивые схему функции должны вернуть схему"
  },
  "object": {
    "base": "должен быть объектом",
    "child": "!!дочерний элемент \"{{!child}}\" не проходит проверку, потому что {{reason}}",
    "min": "должен иметь не меньше {{limit}} дочерних элементов",
    "max": "должен иметь не больше {{limit}} дочерних элементов",
    "length": "должен иметь {{limit}} дочерних элементов",
    "allowUnknown": "!!\"{{!child}}\"не разрешен",
    "with": "!!\"{{mainWithLabel}}\" не найден обязательный сопуствующий ключ \"{{peerWithLabel}}\"",
    "without": "!!\"{{mainWithLabel}}\" конфликт с запрещённым сопутствующим ключём \"{{peerWithLabel}}\"",
    "missing": "должен содержать не меньше одного из {{peerWithLabels}}",
    "xor": "содержит конфликт между взаимоисключающими ключами {{peerWithLabels}}",
    "or": "должен содержать не меньше одного из {{peersWithLabels}}",
    "and": "содержит {{presentWithLabels}} без требуемых сопуствующих ключей {{missingWithLabels}}",
    "nand": "!!\"{{mainWithLabel}}\" не должен существовать одновременно с {{peersWithLabels}}",
    "assert": "!!\"{{ref}}\" не прошел проверку, потому что \"{{ref}}\" не {{message}}",
    "rename": {
      "multiple": "не может переименовать дочерний элемент \"{{from}}\", потому что множественные переименования запрещены и другой ключ уже был переименован в \"{{to}}\"",
      "override": "не может переименовать дочерний элемент \"{{from}}\", потому что замещение запрещено и цель \"{{to}}\" существует",
      "regex": {
        "multiple": "нельзя использовать детей {{from}}, потому что несколько переименовать из инвалидов и другим ключевым уже был переименован в \"{{to}}\"",
        "override": "нельзя использовать детей {{from}}, потому что нет блокировки и целевых \"{{to}}\" существует"
      }
    },
    "type": "должен быть экземпляром \"{{type}}\"",
    "schema": "должно быть, joi инстанции"
  },
  "number": {
    "base": "должен быть числом",
    "min": "должен быть не меньше {{limit}}",
    "max": "должен быть не больше {{limit}}",
    "less": "должен быть меньше {{limit}}",
    "greater": "должен быть больше {{limit}}",
    "float": "должен быть числом с плавающей точкой",
    "integer": "должен быть целым числом",
    "negative": "должен быть отрицательным числом",
    "positive": "должен быть положительным числом",
    "precision": "должен иметь не больше {{limit}} цифр после запятой",
    "ref": "ссылается на \"{{ref}}\", не являющегося числом",
    "multiple": "должен быть кратным {{multiple}}",
    "port": "должен быть действующий порт",
    "map": "должно быть, ряд из {{enums}}"
  },
  "string": {
    "base": "должен быть строкой",
    "min": "длинна должна быть не меньше {{limit}} символов",
    "max": "длинна должна быть не больше {{limit}} символов",
    "length": "длинна должна быть равной {{limit}}",
    "alphanum": "должен содержать только буквенно-цифровые символы",
    "token": "должен содержать только буквенно-цифровые символы и нижнее подчеркивание",
    "regex": {
      "base": "со значением \"{{!value}}\" не соответствует требуемому паттерну: {{pattern}}",
      "name": "со значением \"{{!value}}\" не соответствует паттерну {{name}}",
      "invert": {
        "base": "со значением \"{{!value}}\" матчи опрокинутого схеме: {{pattern}}",
        "name": "со значением \"{{!value}}\" матчи опрокинутого {{name}} схеме"
      }
    },
    "email": "должен быть валидным email-адресом",
    "uri": "должен быть валидным uri",
    "uriRelativeOnly": "должно быть действительным по отношению, ури",
    "uriCustomScheme": "должен быть валидным uri со схемой, соответствующей паттерну {{scheme}}",
    "isoDate": "должен соответствовать формату даты ISO 8601",
    "guid": "должен быть валидным GUID",
    "hex": "должен содержать только шестнадцатеричные символы",
    "hexAlign": "хекс расшифровали представительства движения должны быть:",
    "base64": "должно быть действительным base64 строка",
    "hostname": "должен быть валидным именем хоста (hostname)",
    "normalize": "должны быть в Unicode нормализуется в {{form}} бланк формы",
    "lowercase": "должен содержать только строчные символы",
    "uppercase": "должен содержать только заглавные символы",
    "trim": "не должен содержать пробельные символы в начале или конце строки",
    "creditCard": "должен быть кредитной картой",
    "ref": "ссылается на \"{{ref}}\", не являющегося числом",
    "ip": "должен быть валидным ip-адресом с {{cidr}} CIDR",
    "ipVersion": "должен быть валидным  ip-адресом одной из следующих версий {{version}} с {{cidr}} CIDR"
  }
}